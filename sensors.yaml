- platform: template
  sensors:
    bedroom_temperature_f:
      friendly_name: "Bedroom Temperature"
      entity_id:
        - sensor.bedroom_sensor_temperature
      unit_of_measurement: 째F
      unique_id: '2264462263826'
      device_class: temperature
      value_template: >
        {{ ((float(states('sensor.bedroom_sensor_temperature'))) + 5) | round(1) }}

- platform: template
  sensors:
    bedroom_temp:
      friendly_name: "Bedroom Temperature 2"
      entity_id:
        - sensor.temperature_158d0002478a21
      unit_of_measurement: 째F
      value_template: >
        {{ ((float(states('sensor.temperature_158d0002478a21'))) + 2) | round(1) }}

- platform: template
  sensors:
    office_temperature:
      value_template: "{{states.office_motion_motion_sensor.attributes.temperature}}"

- platform: template
  sensors:
    office_battery:
      friendly_name: "Battery"
      value_template: "{{states.binary_sensor.office_motion_sensor_motion.attributes.battery_level}}"
      unit_of_measurement: "%"

- platform: template
  sensors:
    office_temperature_f:
      friendly_name: "Office Temperature"
      entity_id:
        - sensor.office_motion_sensor_temperature
      unit_of_measurement: 째F
      unique_id: '1312912386808'
      device_class: temperature
      value_template: >
        {{ ((float(states('sensor.office_motion_sensor_temperature'))) + 3.4) | round(1) }}

- platform: template
  sensors:
    office_lux:
      friendly_name: "Lux"
      value_template: >
        {{ (float(states('sensor.office_motion_sensor_light_level'))) | round(0) }}
      unit_of_measurement: lx

- platform: template
  sensors:
    sun_elevation:
      friendly_name: Sun Elevation
      value_template: "{{states.sun.sun.attributes.elevation}}"
      unit_of_measurement: "째"

- platform: template
  sensors:
    sean_room_status:
      value_template: "{{ states.input_select.sean_room_location.state }}"
      friendly_name: "Room Location"
      icon_template: >
        {% if is_state('input_select.sean_room_location', 'Office') %}
          mdi:keyboard
        {% elif is_state('input_select.sean_room_location', 'Bedroom') %}
          mdi:bed
        {% elif is_state('input_select.sean_room_location', 'Living Room') %}
          mdi:sofa
        {% elif is_state('input_select.sean_room_location', 'Sleep') %}
          mdi:chat-sleep
        {% elif is_state('input_select.sean_room_location', 'Away') %}
          mdi:exit-run
        {% elif is_state('input_select.sean_room_location', 'Home') %}
          mdi:home
        {% else %}
          mdi:exit-run
        {% endif %}

- platform: template
  sensors:
    emily_room_status:
      value_template: "{{ states.input_select.emily_room_location.state }}"
      friendly_name: "Room Location"
      icon_template: >
        {% if is_state('input_select.emily_room_location', 'Office') %}
          mdi:keyboard
        {% elif is_state('input_select.emily_room_location', 'Bedroom') %}
          mdi:bed
        {% elif is_state('input_select.emily_room_location', 'Living Room') %}
          mdi:sofa
        {% elif is_state('input_select.emily_room_location', 'Away') %}
          mdi:exit-run
        {% elif is_state('input_select.emily_room_location', 'Sleep') %}
          mdi:chat-sleep
        {% elif is_state('input_select.emily_room_location', 'Home') %}
          mdi:home
        {% else %}
          mdi:exit-run
        {% endif %}

- platform: template
  sensors:
    plex_bandwidth:
      value_template: "{{'sensor.tautulli_total_bandwidth'}}"
      unit_of_measurement: "Mb"


- platform: template
  sensors:
    plex_bandwidth_mbit:
#      entity_id:
#        - sensor.plex_bandwidth
      unit_of_measurement: Mbps
      value_template: >
        {{ ((float(states('sensor.tautulli_total_bandwidth'))) / 1000) | round(1) }}

- platform: template
  sensors:
    #----- Count Automations
    count_automations:
      entity_id: sensor.date
      friendly_name: Automations
      value_template: >
        {%- set domains = ['automation'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}

    #----- Count Scripts
    count_scripts:
      entity_id: sensor.date
      friendly_name: Scripts
      value_template: >
        {%- set domains = ['script'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}

    #----- Count Binary Sensors
    count_binary_sensors:
      entity_id: sensor.date
      friendly_name: Binary Sensors
      value_template: >
        {%- set domains = ['binary_sensor'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}

    #----- Count Sensors
    count_sensors:
      entity_id: sensor.date
      friendly_name: Sensors
      value_template: >
        {%- set domains = ['sensor'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}

    #----- Count Switches
    count_switches:
      entity_id: sensor.date
      friendly_name: Switches
      value_template: >
        {%- set domains = ['switch'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}

    #----- Count Lights
    count_lights:
      entity_id: sensor.date
      friendly_name: Lights
      value_template: >
        {%- set domains = ['light'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}

#- platform: season
#  type: astronomical

- platform: time_date
  display_options:
    - "time"

- platform: mqtt_room
  device_id: "iBeacon:d66d9c0d-3217-4f00-8a4f-d0487e5da7b7-100-1"
#  device_id: "iBeacon:87429662-3b1c-4f44-9caa-74b4b2c08a6e-100-1"
  name: "Sean Room Location"
  state_topic: "espresense/devices/iBeacon:d66d9c0d-3217-4f00-8a4f-d0487e5da7b7-100-1"
  timeout: 5
  away_timeout: 120

- platform: mqtt_room
  device_id: "iBeacon:7153a57a-6fbd-4207-b0b1-2d871944de58-100-1"
  name: "Emily Room Location"
  state_topic: "espresense/devices/iBeacon:7153a57a-6fbd-4207-b0b1-2d871944de58-100-1"
  timeout: 5
  away_timeout: 120

- platform: mqtt_room
  device_id: "iBeacon:4c77e15d-48b1-46bc-9972-8a54a70f8eec-100-1"
  name: "Joyce Room Location"
  state_topic: "espresense/devices/iBeacon:4c77e15d-48b1-46bc-9972-8a54a70f8eec-100-1"
  timeout: 5
  away_timeout: 120

- platform: spotcast

- platform: tautulli
  api_key: !secret tautulli_api
  host: 192.168.1.79

- platform: template
  sensors:
    downstairs_hvac_state:
      value_template: "{{states.climate.downstairs.attributes.hvac_action}}"
- platform: template
  sensors:
    upstairs_hvac_state:
      value_template: "{{states.climate.upstairs.attributes.hvac_action}}"


- platform: rest
  name: NWS Weather Alerts
  resource: !secret nws_api
  method: GET
  headers:
    User-Agent: "HomeAssistant"
    Accept: "application/geo+json"
  value_template: "{{ value_json.features | length }}"
  json_attributes_path: "$.features"
  json_attributes:
    - properties
  scan_interval: 900  # Updates every 15 minutes


# Dryer usage sensors
- platform: history_stats
  name: Dryer Vibration Duration Today
  entity_id: binary_sensor.dryer_vibration_sensor_vibration
  state: "on"
  type: time
  start: "{{ now().replace(hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"

- platform: history_stats
  name: Dryer Vibration Duration This Month
  entity_id: binary_sensor.dryer_vibration_sensor_vibration
  state: "on"
  type: time
  start: "{{ now().replace(day=1, hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"

- platform: template
  sensors:
    dryer_energy_use_monthly:
      friendly_name: "Dryer Energy Use This Month"
      unique_id: dryer_energy_use_this_month
      unit_of_measurement: "kWh"
      value_template: >
        {% set hours = states('sensor.dryer_vibration_duration_this_month') | float(0) %}
        {{ (hours * 5) | round(2) }}

- platform: template
  sensors:
    dryer_energy_cost_monthly:
      friendly_name: "Dryer Cost This Month"
      unit_of_measurement: "$"
      value_template: >
        {% set kwh = states('sensor.dryer_energy_use_monthly') | float(0) %}
        {{ (kwh * 0.12) | round(2) }}


# Upstairs HVAC Cooling Duration This Month
- platform: history_stats
  name: Upstairs Cooling Duration This Month
  unique_id: upstairs_cooling_duration_month
  entity_id: binary_sensor.upstairs_actively_cooling
  state: 'on'
  type: time
  start: "{{ now().replace(day=1, hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"

# Downstairs HVAC Cooling Duration This Month
- platform: history_stats
  name: Downstairs Cooling Duration This Month
  unique_id: downstairs_cooling_duration_month
  entity_id: binary_sensor.downstairs_actively_cooling
  state: 'on'
  type: time
  start: "{{ now().replace(day=1, hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"

# HVAC Energy & Cost Templates
- platform: template
  sensors:
    upstairs_hvac_cost_this_month:
      friendly_name: "Upstairs HVAC Cost This Month"
      unique_id: upstairs_hvac_cost_this_month
      unit_of_measurement: "$"
      value_template: >
        {% set hours = states('sensor.upstairs_cooling_duration_this_month') | float(0) %}
        {% set kwh = hours * 3.5 %}
        {{ (kwh * 0.12) | round(2) }}

    downstairs_hvac_cost_this_month:
      friendly_name: "Downstairs HVAC Cost This Month"
      unique_id: downstairs_hvac_cost_this_month
      unit_of_measurement: "$"
      value_template: >
        {% set hours = states('sensor.downstairs_cooling_duration_this_month') | float(0) %}
        {% set kwh = hours * 3.5 %}
        {{ (kwh * 0.12) | round(2) }}

# Upstairs heating costs
- platform: history_stats
  name: Upstairs Heating Duration This Month
  unique_id: upstairs_heating_duration_month
  entity_id: binary_sensor.upstairs_actively_heating
  state: 'on'
  type: time
  start: '{{ now().replace(day=1, hour=0, minute=0, second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    estimated_upstairs_heating_cost:
      friendly_name: "Upstairs Estimated Heating Cost"
      unique_id: estimated_upstairs_heating_cost
      unit_of_measurement: "$"
      value_template: >
        {% set hours = states('sensor.upstairs_heating_duration_this_month') | float(0) %}
        {% set kwh_per_hour = 1.8 %}
        {% set cost_per_kwh = 0.12 %}
        {{ (hours * kwh_per_hour * cost_per_kwh) | round(2) }}

# Downstairs heating costs
- platform: history_stats
  name: Downstairs Heating Duration This Month
  unique_id: downstairs_heating_duration_month
  entity_id: binary_sensor.downstairs_actively_heating
  state: 'on'
  type: time
  start: '{{ now().replace(day=1, hour=0, minute=0, second=0) }}'
  end: '{{ now() }}'

- platform: template
  sensors:
    estimated_downstairs_heating_cost:
      friendly_name: "Downstairs Estimated Heating Cost"
      unique_id: estimated_downstairs_heating_cost
      unit_of_measurement: "$"
      value_template: >
        {% set hours = states('sensor.downstairs_heating_duration_this_month') | float(0) %}
        {% set kwh_per_hour = 1.8 %}
        {% set cost_per_kwh = 0.12 %}
        {{ (hours * kwh_per_hour * cost_per_kwh) | round(2) }}

- platform: template
  sensors:
    total_cooling_runtime_this_month:
      friendly_name: "Total Cooling Runtime This Month"
      unique_id: total_cooling_runtime_this_month
      unit_of_measurement: "h"
      value_template: >
        {% set up = states('sensor.upstairs_cooling_duration_this_month') | float(0) %}
        {% set down = states('sensor.downstairs_cooling_duration_this_month') | float(0) %}
        {{ (up + down) | round(2) }}

- platform: template
  sensors:
    total_heating_runtime_this_month:
      friendly_name: "Total Heating Runtime This Month"
      unique_id: total_heating_runtime_this_month
      unit_of_measurement: "h"
      value_template: >
        {% set up = states('sensor.upstairs_heating_duration_this_month') | float(0) %}
        {% set down = states('sensor.downstairs_heating_duration_this_month') | float(0) %}
        {{ (up + down) | round(2) }}

- platform: template
  sensors:
    total_hvac_runtime_this_month:
      friendly_name: "Total HVAC Runtime This Month"
      unique_id: total_hvac_runtime_this_month
      unit_of_measurement: "h"
      value_template: >
        {% set up_cool = states('sensor.upstairs_cooling_duration_this_month') | float(0) %}
        {% set down_cool = states('sensor.downstairs_cooling_duration_this_month') | float(0) %}
        {% set up_heat = states('sensor.upstairs_heating_duration_this_month') | float(0) %}
        {% set down_heat = states('sensor.downstairs_heating_duration_this_month') | float(0) %}
        {{ (up_cool + down_cool + up_heat + down_heat) | round(2) }}


- platform: template
  sensors:
    total_hvac_cost_this_month:
      friendly_name: "Total HVAC Cost This Month"
      unique_id: total_hvac_cost_this_month
      unit_of_measurement: "$"
      value_template: >
        {% set cool_up = states('sensor.upstairs_hvac_cost_this_month') | float(0) %}
        {% set cool_down = states('sensor.downstairs_hvac_cost_this_month') | float(0) %}
        {% set heat_up = states('sensor.estimated_upstairs_heating_cost') | float(0) %}
        {% set heat_down = states('sensor.estimated_downstairs_heating_cost') | float(0) %}
        {{ (cool_up + cool_down + heat_up + heat_down) | round(2) }}



- platform: template
  sensors:
    freezer_monthly_cost:
      friendly_name: "Freezer Cost This Month"
      unit_of_measurement: "$"
      value_template: >
        {% set kwh = states('sensor.freezer_monthly_energy') | float(0) %}
        {{ (kwh * 0.12) | round(2) }}

    radon_monthly_cost:
      friendly_name: "Radon Mitigator Cost This Month"
      unit_of_measurement: "$"
      value_template: >
        {% set kwh = states('sensor.radon_mitigator_monthly_cost') | float(0) %}
        {{ (kwh * 0.12) | round(2) }}

    attic_fan_monthly_cost:
      friendly_name: "Attic Fan Cost This Month"
      unit_of_measurement: "$"
      value_template: >
        {% set kwh = states('sensor.attic_fan_monthly_cost') | float(0) %}
        {{ (kwh * 0.12) | round(2) }}

    washer_monthly_cost:
      friendly_name: "Washer Cost This Month"
      unit_of_measurement: "$"
      value_template: >
        {% set kwh = states('sensor.washer_energy_usage') | float(0) %}
        {{ (kwh * 0.12) | round(2) }}