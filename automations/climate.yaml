# Adjust the downstairs HVAC cooler depending when present
- alias: Adjust Downstairs HVAC down
  initial_state: on
  trigger:
    - platform: template
      value_template: "{{ states('sensor.sean_room_location') in ['living_room','kitchen','sunroom','couch','foyer'] }}"
      for:
        minutes: 7
    - platform: template
      value_template: "{{ states('sensor.emily_room_location') in ['living_room','kitchen','sunroom','couch','foyer'] }}"
      for:
        minutes: 7
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.family
        state: "home"
      - condition: state
        entity_id: input_boolean.bedtime_emily
        state: 'off'
      - condition: state
        entity_id: input_boolean.bedtime_sean
        state: 'off'
      - condition: or
        conditions:
          - condition: state
            entity_id: climate.downstairs
            attribute: temperature
            state: 75
          - condition: state
            entity_id: climate.downstairs
            attribute: target_temp_high
            state: 75
          - condition: state
            entity_id: climate.downstairs
            attribute: temperature
            state: 76
          - condition: state
            entity_id: climate.downstairs
            attribute: target_temp_high
            state: 76
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.downstairs
        temperature: >
          {% if states('climate.downstairs') == 'cool' %}
            {{ state_attr('climate.downstairs' , 'temperature')|int - 2 }}
          {% elif states('climate.downstairs') == 'heat_cool' %}
            {{ state_attr('climate.downstairs' , 'target_temp_high')|int - 2 }}
          {% endif %}

# Adjust the downstairs HVAC warmer depending when present
- alias: Adjust Downstairs HVAC up
  initial_state: on
  trigger:
    - platform: template
      value_template: "{{ not states('sensor.sean_room_location') in ['living_room','kitchen','sunroom','couch','foyer'] }}"
      for:
        minutes: 10
    - platform: template
      value_template: "{{ not states('sensor.emily_room_location') in ['living_room','kitchen','sunroom','couch','foyer'] }}"
      for:
        minutes: 10
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.family
        state: "home"
      - condition: state
        entity_id: input_boolean.bedtime_emily
        state: 'off'
      - condition: state
        entity_id: input_boolean.bedtime_sean
        state: 'off'
      - condition: template
        value_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.shield', 'playing') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.shield', 'paused') }}" # NOT condition
      - condition: or
        conditions:
          - condition: state
            entity_id: climate.downstairs
            attribute: temperature
            state: 73
          - condition: state
            entity_id: climate.downstairs
            attribute: target_temp_high
            state: 73
          - condition: state
            entity_id: climate.downstairs
            attribute: temperature
            state: 74
          - condition: state
            entity_id: climate.downstairs
            attribute: target_temp_high
            state: 74
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ not states('sensor.sean_room_location') in ['living_room','kitchen','sunroom','couch','foyer'] }}"
          - condition: template
            value_template: "{{ not states('sensor.emily_room_location') in ['living_room','kitchen','sunroom','couch','foyer'] }}"
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.downstairs
        temperature: >
          {% if states('climate.downstairs') == 'cool' %}
            {{ state_attr('climate.downstairs' , 'temperature')|int + 2 }}
          {% elif states('climate.downstairs') == 'heat_cool' %}
            {{ state_attr('climate.downstairs' , 'target_temp_high')|int + 2 }}
          {% endif %}

# Adjust the upstairs HVAC cooler depending when present
- alias: Adjust Upstairs HVAC down
  initial_state: on
  trigger:
    - platform: template
      value_template: "{{ states('sensor.sean_room_location') in ['office','bedroom','bedroom2','guest'] }}"
      for:
        minutes: 5
    - platform: template
      value_template: "{{ states('sensor.emily_room_location') in ['office','bedroom','bedroom2','guest'] }}"
      for:
        minutes: 5
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.family
        state: "home"
      - condition: state
        entity_id: input_boolean.bedtime_emily
        state: 'off'
      - condition: state
        entity_id: input_boolean.bedtime_sean
        state: 'off'
      - condition: or
        conditions:
          - condition: state
            entity_id: climate.upstairs
            attribute: temperature
            state: 75
          - condition: state
            entity_id: climate.upstairs
            attribute: target_temp_high
            state: 75
          - condition: state
            entity_id: climate.upstairs
            attribute: temperature
            state: 76
          - condition: state
            entity_id: climate.upstairs
            attribute: target_temp_high
            state: 76
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.upstairs
        temperature: >
          {% if states('climate.upstairs') == 'cool' %}
            {{ state_attr('climate.upstairs' , 'temperature')|int - 2 }}
          {% elif states('climate.upstairs') == 'heat_cool' %}
            {{ state_attr('climate.upstairs' , 'target_temp_high')|int - 2 }}
          {% endif %}

# Adjust the upstairs HVAC warmer depending when present
- alias: Adjust Upstairs HVAC up
  initial_state: on
  trigger:
    - platform: template
      value_template: "{{ not states('sensor.sean_room_location') in ['office','bedroom','bedroom2','guest'] }}"
      for:
        minutes: 10
    - platform: template
      value_template: "{{ not states('sensor.emily_room_location') in ['office','bedroom','bedroom2','guest'] }}"
      for:
        minutes: 10
    - platform: time_pattern
      minutes: "/10"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.family
        state: "home"
      - condition: state
        entity_id: input_boolean.bedtime_emily
        state: 'off'
      - condition: state
        entity_id: input_boolean.bedtime_sean
        state: 'off'
      - condition: template
        value_template: "{{ not is_state('media_player.plex_bedroom_tv', 'playing') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.plex_bedroom_tv', 'paused') }}" # NOT condition
      - condition: or
        conditions:
          - condition: state
            entity_id: climate.upstairs
            attribute: temperature
            state: 73
          - condition: state
            entity_id: climate.upstairs
            attribute: target_temp_high
            state: 73
          - condition: state
            entity_id: climate.upstairs
            attribute: temperature
            state: 74
          - condition: state
            entity_id: climate.upstairs
            attribute: target_temp_high
            state: 74
      - condition: and
        conditions:
          - condition: template
            value_template: "{{ not states('sensor.sean_room_location') in ['office','bedroom','bedroom2','guest'] }}"
          - condition: template
            value_template: "{{ not states('sensor.emily_room_location') in ['office','bedroom','bedroom2','guest'] }}"
  action:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.upstairs
        temperature: >
          {% if states('climate.upstairs') == 'cool' %}
            {{ state_attr('climate.upstairs' , 'temperature')|int + 2 }}
          {% elif states('climate.upstairs') == 'heat_cool' %}
            {{ state_attr('climate.upstairs' , 'target_temp_high')|int + 2 }}
          {% endif %}

# Circulate air when home
- alias: Circulate Downstairs HVAC Fan
  initial_state: off
  trigger:
    - platform: time_pattern
      hours: "/1"
  condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: person.sean_green
            state: "home"
          - condition: state
            entity_id: person.emily_green
            state: "home"
  action:
    - service: climate.set_fan_mode
      data:  
        entity_id: climate.downstairs
        fan_mode: 'on'
    - delay:
        minutes: 15
    - service: climate.set_fan_mode
      data:  
        entity_id: climate.downstairs
        fan_mode: 'off'

# When porch door is open turn off nest
- alias: Door open turn off nest
  initial_state: on
  trigger:
    platform: state
    entity_id: group.patio_door
    to: "on"
    for:
      seconds: "120"
  action:
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        hvac_mode: "off"

# When porch door is closed turn Nest back on
- alias: Door closed turn on nest
  initial_state: on
  trigger:
    platform: state
    entity_id: group.patio_door
    to: "off"
    for:
      seconds: "10"
  action:
    - service: climate.set_hvac_mode
      data_template:
        entity_id: climate.downstairs
        hvac_mode: >
          {% if states('sensor.season') == 'spring' or states('sensor.season') == 'summer' %}
            cool
          {% elif states('sensor.season') == 'autumn' %}
            heat_cool
          {% else %}
            heat_cool
          {% endif %}

# Turn on ceiling fan under certain conditions
- alias: Turn on Ceiling Fan
  initial_state: on
  trigger:
    platform: state
    entity_id: input_boolean.living_room_occupied
    to: "on"
    for:
      minutes: "4"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.seanemily
        state: "home"
      - condition: time
        after: "07:00:00"
        before: "23:00:00"
      - condition: numeric_state
        entity_id: sensor.downstairs_temperature
        above: "72"
  action:
    - service: switch.turn_on
      entity_id: switch.living_room_fan

# Turn off living room fan when no one is in room
- alias: Turn off Living Room Fan
  initial_state: on
  trigger:
    platform: state
    entity_id: input_boolean.living_room_occupied
    to: "off"
    for:
      minutes: "2"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.shield', 'playing') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.shield', 'paused') }}"
  action:
    - service: switch.turn_off
      entity_id: switch.living_room_fan

# Turn on bedroom fan under certain conditions
- alias: Turn on Bedroom Fan
  initial_state: on
  trigger:
    platform: state
    entity_id: input_boolean.bedroom_occupied
    to: "on"
    for:
      minutes: "4"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.seanemily
        state: "home"
      - condition: numeric_state
        entity_id: sensor.bedroom_temperature_f
        above: "71"
  action:
    - service: switch.turn_on
      entity_id: switch.bedroom_fan

# Turn off bedroom fan under certain conditions
- alias: Turn off Bedroom Fan
  initial_state: on
  trigger:
    platform: state
    entity_id: input_boolean.bedroom_occupied
    to: "off"
    for:
      minutes: "2"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ not is_state('media_player.bedroom_tv', 'playing') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.bedroom_tv', 'paused') }}" # NOT condition
      - condition: template
        value_template: "{{ not is_state('media_player.bedroom_speaker', 'playing') }}" # NOT condition
  action:
    - service: switch.turn_off
      entity_id: switch.bedroom_fan
