# Set theme on HA start
- alias: Set theme at startup
  initial_state: on
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data:
      name: slate
      mode: dark

- alias: Low battery level detection & notification for all battery sensors
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      exclude:
        entity_id:
          - sensor.emily_pixel_battery_level
          - sensor.sean_pixel_battery_level
          - sensor.joyce_phone_battery_level
          - binary_sensor.blink_inside_battery
      actions:
        - service: notify.mobile_app_sean_pixel
          metadata: {}
          data:
            title: Low Battery Warning
            message: "{{sensors}} have low batteries! Consider changing them soon"

# Restart Room Presence Sensors
- alias: 'Restart Room Sensors'
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: "/10"
  action:
    - service: button.press
      target:
        entity_id: button.espresence_living_room_restart
    - service: button.press
      target:
        entity_id: button.espresense_bedroom_restart
    - service: button.press
      target:
        entity_id: button.espresense_foyer_restart
    - service: button.press
      target:
        entity_id: button.espresense_couch_restart
    - service: button.press
      target:
        entity_id: button.espresense_kitchen_restart
    - service: button.press
      target:
        entity_id: button.espresense_office_restart
    - service: button.press
      target:
        entity_id: button.espresense_sunroom_restart


# Reload Google Nest Integration for better reliability
- alias: 'Reload Upstairs Nest'
  initial_state: on
  trigger:
    - platform: state
      entity_id: climate.upstairs
      to: 'unavailable'
      for:
        seconds: 10
  action:
    - service: homeassistant.reload_config_entry
      target:
        device_id: 41cf689fe0938c4721204e1c10eb5ba8

# Reload TP Link Cabinet Integration for better reliability
- alias: 'Reload Cabinet Lights'
  initial_state: on
  trigger:
    - platform: state
      entity_id: light.cabinet_lights
      to: 'unavailable'
      for:
        seconds: 30
  action:
    - service: homeassistant.reload_config_entry
      target:
        device_id: f9fa94da90dd552cf02b9376899b49d3

# Reload TP Link Cabinet Integration for better reliability
- alias: 'Reload Cabinet Lights Check Every Minute'
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: "/3"
  condition: 
    - condition: state
      entity_id: light.cabinet_lights
      state: 'unavailable'
  action:
    - service: homeassistant.reload_config_entry
      target:
        device_id: f9fa94da90dd552cf02b9376899b49d3

# Reload TP Link Cabinet Integration for better reliability
- alias: 'Toggle Cabinet Lights Switch'
  initial_state: on
  trigger:
    - platform: state
      entity_id: light.cabinet_lights
      to: 'unavailable'
      for:
        minutes: 5
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.cabinet_light_switch
    - delay:
        seconds: 5
    - service: switch.turn_on
      target:
        entity_id: switch.cabinet_light_switch

# Bedtime Sean
- alias: 'Sean Bedtime'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.sean_pixel_battery_state
    to: 'charging'
  action:
    - service: script.bedtime

# Morning Sean
- alias: 'Sean Morning'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.sean_pixel_battery_state
    to: 'discharging'
  action:
    - service: script.morning

# Bedtime Emily
- alias: 'Emily Bedtime'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.emily_pixel_battery_state
    to: 'charging'
  action:
    - service: script.bedtime_emily

# Morning Emily
- alias: 'Emily Morning'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.emily_pixel_battery_state
    to: 'discharging'
  action:
    - service: script.morning_emily

# Bedtime Joyce
- alias: 'Joyce Bedtime'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.joyce_phone_battery_state
    to: 'charging'
  action:
    - service: script.bedtime_joyce

# Bedtime Joyce
- alias: 'Joyce Bedtime Battery Full'
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: "/10"
  condition: 
    - condition: state
      entity_id: sensor.joyce_phone_battery_state
      state: 'full'
    - condition: time
      after: "22:00:00"
      before: "03:00:00"
  action:
    - service: script.bedtime_joyce

# Morning Joyce
- alias: 'Joyce Morning'
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.joyce_phone_battery_state
    to: 'discharging'
  action:
    - service: script.morning_joyce

# Check  to see if zigbee sensors are offline
- alias: Zigbee Sensors Offline
  initial_state: on
  description: ""
  use_blueprint:
    path: Tahutipai/zigbee_zwave_notify_when_battery_devices_have_fallen_offline.yaml
    input:
      actions:
        - service: notify.mobile_app_sean_pixel
          data:
            title: "Zigbee Sensors Offline"
            message: "The following sensors are offline: {{sensors}}"

# Kitchen Water Leak Sensor
- alias: 'Water Leak - Kitchen'
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_leak_sensor_moisture
    to: "on"
    for:
      seconds: 5
  action:
    - service: notify.notify
      data:
        message: "There is a leak under the Kitchen sink!"
        title: "Leak Alert"    
    - service: media_player.volume_set
      data:
        entity_id: media_player.whole_house
        volume_level: .99
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Warning! There is a leak under the kitchen sink!"
    - delay: "00:00:05"
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Warning! There is a leak under the kitchen sink!"

# Bedroom Water Leak Sensor
- alias: 'Water Leak - Bedroom'
  initial_state: on
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_leak_sensor_moisture
      to: "on"
      for:
        seconds: 5
    - platform: state
      entity_id: binary_sensor.bedroom_leak_sensor_2_moisture
      to: "on"
      for:
        seconds: 5
  action:
    - service: notify.notify
      data:
        message: "There is a leak under the Bedroom sink!"
        title: "Leak Alert"    
    - service: media_player.volume_set
      data:
        entity_id: media_player.whole_house
        volume_level: .99
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Warning! There is a leak under the bedroom sink!"
    - delay: "00:00:05"
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Warning! There is a leak under the bedroom sink!"

# Guest Bathroom Water Leak Sensor
- alias: 'Water Leak - Guest Bathroom'
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.guest_leak_sensor_moisture
    to: "on"
    for:
      seconds: 5
  action:
    - service: notify.notify
      data:
        message: "There is a leak under the Guest Bathroom sink!"
        title: "Leak Alert"    
    - service: media_player.volume_set
      data:
        entity_id: media_player.whole_house
        volume_level: .99
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Warning! There is a leak under the guest bathroom sink!"
    - delay: "00:00:05"
    - service: tts.google_translate_say
      data:
        entity_id: media_player.whole_house
        message: "Warning! There is a leak under the guest bathroom sink!"




- alias: Recast Dashboard
  initial_state: off
  trigger:
    - platform: time_pattern
      minutes: "/1"
    - platform: state
      entity_id: input_boolean.living_room_occupied
      to: "on"
    #- platform: template
    #  value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'DashCast' }}"
  condition: 
    - condition: template
      value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'Spotify' }}"
    - condition: template
      value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'DashCast' }}"
    - condition: state
      entity_id: input_boolean.bedtime_sean
      state: "off"
    - condition: state
      entity_id: input_boolean.living_room_occupied
      state: "on"
    - condition: state
      entity_id: group.family
      state: home
    - condition: template
      value_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}" # NOT condition
    - condition: template
      value_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}" # NOT condition
    - condition: template
      value_template: "{{ not is_state('media_player.nvidia_shield_pro', 'playing') }}" # NOT condition
    - condition: template
      value_template: "{{ not is_state('media_player.nvidia_shield_pro', 'paused') }}"
  action:
    - delay:
        seconds: 5
    - service: script.cast_ha_nesthub

- alias: Turn off Dashboard Cast
  initial_state: off
  trigger:
    - platform: state
      entity_id: media_player.plex_living_room_tv
      to: playing
    - platform: state
      entity_id: input_boolean.living_room_occupied
      to: "off"
      for:
        minutes: 10
    - platform: state
      entity_id: media_player.nvidia_shield_pro
      to: playing
    - platform: state
      entity_id: group.family
      to: not_home
    - platform: state
      entity_id: input_boolean.bedtime_sean
      to: "on"
    - platform: state
      entity_id: input_boolean.bedtime_emily
      to: "on"
  action:
    - service: media_player.turn_off
      data:
        entity_id: media_player.nesthub


# Turn on air fresh after cats use box
- alias: Turn on air fresh
  initial_state: on
  trigger:
    - platform: state
      entity_id: vacuum.kitty_throne_litter_box
      attribute: status
      to: 'Cat Sensor Timing'
  condition:
    - condition: state
      entity_id: group.family
      state: "home"
  action:
    - service: switch.turn_on
      entity_id: switch.air_freshener_switch
    - delay:
        minutes: "20"
    - service: switch.turn_off
      entity_id: switch.air_freshener_switch

- alias: Restart Litter Robot Cat Interrupted
  description: If litter robot is in error for at least 5 minutes, the switch will toggle power to reset robot
  trigger:
    - platform: state
      entity_id:
        - sensor.kitty_throne_status_code
      to: 'Cat Sensor Interrupted'
      for:
        minutes: 3
    - platform: state
      entity_id:
        - sensor.kitty_throne_status_code
      to: 'Pinch Detect'
      for:
        minutes: 3
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.litter_robot
    - delay:
        seconds: 10
    - service: switch.turn_on
      target:
        entity_id: switch.litter_robot
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
    - service: vacuum.start
      target:
        entity_id: vacuum.kitty_throne_litter_box
  mode: single

- alias: Restart Litter Robot
  description: If litter robot is in error for at least 5 minutes, the switch will toggle power to reset robot
  trigger:
    - platform: state
      entity_id:
        - sensor.kitty_throne_status_code
      from: "Ready"
      attribute: status
      for:
        minutes: 5
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.kitty_throne_status_code
          attribute: status
          state: "Cat Sensor Timing" #cat sensor timing
        - condition: state
          entity_id: sensor.kitty_throne_status_code
          attribute: status
          state: "Empty Cycle" #empty cycle
        - condition: state
          entity_id: sensor.kitty_throne_status_code
          attribute: status
          state: "Drawer Full At Startup" #drawer full at startup
        - condition: state
          entity_id: sensor.kitty_throne_status_code
          attribute: status
          state: "Drawer Full 2 Cycles Left" #drawer full 2 cycles left
        - condition: state
          entity_id: sensor.kitty_throne_status_code
          attribute: status
          state: "Drawer Full One Cycle Left" #drawer full one cycle left
        - condition: state
          entity_id: sensor.kitty_throne_status_code
          attribute: status
          state: "Cat Detected" #cat detected
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.litter_robot
    - delay:
        seconds: 10
    - service: switch.turn_on
      target:
        entity_id: switch.litter_robot
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
    - service: vacuum.start
      data: {}
      target:
        entity_id: vacuum.kitty_throne_litter_box
  mode: single

# Turn on Vacuum three times a day to clean litter
- alias: Vacuum Sunroom
  initial_state: on
  trigger:
    - platform: time
      at: "06:00:00"
    - platform: time
      at: "12:00:00"
    - platform: time
      at: "16:30:00"
  condition: []
  action:
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'playing') }}"
    - service: script.vac_clean_sunroom

# Vacuum hardwood floors three times a week
- alias: Vacuum Hardwood Floors
  initial_state: on
  trigger:
    - platform: time
      at: "14:00:00"
  condition:
    - condition: time
      weekday:
        - mon
        - wed
        - fri
    - condition: or
      conditions:
        - condition: state
          entity_id: person.emily_green
          state: 'home'
        - condition: state
          entity_id: person.sean_green
          state: 'home'
  action:
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'paused') }}"
    - wait_template: "{{ not is_state('media_player.nvidia_shield_pro', 'playing') }}"
    - service: script.vac_clean_multiroom

# Upstairs vac three times a week
- alias: Vacuum Upstairs
  initial_state: on
  trigger:
    - platform: time
      at: "18:00:00"
  condition:
    - condition: time
      weekday:
        - mon
        - wed
        - fri
    - condition: or
      conditions:
        - condition: state
          entity_id: person.emily_green
          state: 'home'
        - condition: state
          entity_id: person.sean_green
          state: 'home'
  action:
    - service: script.vac_clean_upstairs

# Garbage Day notifications
- alias: Garbage Day
  initial_state: on
  trigger:
    - platform: time
      at: "18:30:00"
  condition:
    condition: time
    weekday:
      - sun
  action:
    - service: notify.notify
      data:
        message: ""
        data:
          image: "http://192.168.1.185:8123/local/images/garbage-day.jpg"
        title: ""
#    - service: notify.shield
#      data:
#        message: ""
#        title: ""
#        data:
#          duration: 7
#          fontsize: small
#          position: bottom-right
#          transparency: 100%
#          color: black
#          interrupt: 0
#          image:
#            url: "http://192.168.1.185:8123/local/images/garbage-day.jpg"
    - service: media_player.volume_set
      data:
        entity_id: media_player.nesthub
        volume_level: 1
    - delay:
        seconds: 2
    - service: media_player.play_media
      data:
        entity_id: media_player.whole_house
        media_content_id: "http://192.168.1.185:8123/local/audio/garbage-day.mp3"
        media_content_type: audio/mp3
    - service: media_player.volume_set
      data:
        entity_id: media_player.nesthub
        volume_level: .7

# Shitter Full notifications
- alias: Shitter Full
  initial_state: on
  trigger:
    - platform: numeric_state
      entity_id: sensor.kitty_throne_waste_drawer
      above: 95
  action:
    - service: notify.notify
      data:
        message: ""
        data:
          image: "http://192.168.1.185:8123/local/images/shitter.jpg"
        title: ""
#    - service: notify.shield
#      data:
#        message: ""
#        title: ""
#        data:
#          duration: 7
#          fontsize: small
#          position: bottom-right
#          transparency: 100%
#          color: black
#          interrupt: 0
#          image:
#            url: "http://192.168.1.185:8123/local/images/shitter.png"

# Vac is stuck
- alias: Vacuum Error Jeeves
  initial_state: on
  trigger:
    - platform: state
      entity_id: vacuum.roborock_vacuum_a08
      to: "error"
  action:
    - service: notify.notify
      data:
        message: "Jeeves is stuck. Please help him!"
        title: "Vacuum Alert"

# Vac is stuck
- alias: Vacuum Error Rosie
  initial_state: on
  trigger:
    - platform: state
      entity_id: vacuum.rosie
      to: "error"
  action:
    - service: notify.notify
      data:
        message: "Rosie is stuck. Please help her!"
        title: "Vacuum Alert"

# Litter Robot offline for 30 minutes
- alias: Litter Robot Offline
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.kitty_throne_status_code
      to: "offline"
      for:
        minutes: 15
  action:
    - service: switch.turn_on
      entity_id: switch.litter_robot
    - service: notify.notify
      data:
        message: "The Cat Shitter is powered down. Turn it back on!"
        title: "Cat Shitter Offline"
        
# Turn Off Litter Robot Pinch Detect
- alias: Litter Robot Pinch Error
  initial_state: on
  trigger:
    - platform: state
      entity_id: sensor.kitty_throne_status_code
      to: 'Pinch Detect'
      for:
        seconds: 15
  action:
    - service: vacuum.stop
      entity_id: vacuum.kitty_throne_litter_box
    - delay:
        seconds: 10
    - service: vacuum.start
      entity_id: vacuum.kitty_throne_litter_box

# Turn off Washer at night
- alias: Turn off Washer
  initial_state: on
  trigger:
    - platform: time
      at: "19:00:00"
  condition:
    condition: numeric_state
    entity_id: sensor.washer_current_consumption
    below: 10
  action:
    - service: switch.turn_off
      entity_id: switch.washer

# Turn on Washer at morning
- alias: Turn on Washer
  initial_state: on
  trigger:
    - platform: time
      at: "07:00:00"
  action:
    - service: switch.turn_on
      entity_id: switch.washer