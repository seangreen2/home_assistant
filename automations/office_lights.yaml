# Office Auto Brightness
- alias: "Office Auto Brightness"
  initial_state: on
  trigger:
    - platform: state
      entity_id: group.office_motion
      to: "on"
#    - platform: state
#      entity_id: input_boolean.office_occupied
#      to: "on"
  condition:
    - condition: state
      entity_id: group.seanemily
      state: "home"
    - condition: state
      entity_id: light.office
      state: 'off'
  action:
    - service: adaptive_lighting.apply
      data:
        lights:
          - light.office
        adapt_brightness: true
        adapt_color: true
        turn_on_lights: true
        transition: 1
        entity_id: switch.adaptive_lighting_adapt_brightness_default
    - delay: "00:00:00.500"  # 500ms delay
    - service: adaptive_lighting.apply
      data:
        lights:
          - light.office
        adapt_brightness: true
        adapt_color: true
        turn_on_lights: true
        entity_id: switch.adaptive_lighting_adapt_brightness_default

# Office Auto Brightness Transition (based on Sun)
- alias: "Office Auto Brightness Transition"
  initial_state: on
  trigger:
    - platform: state
      entity_id: 
        - sun.sun
  condition:
    - condition: state
      entity_id: group.family
      state: "home"
    - condition: state
      entity_id: light.office
      state: "on"
  action:
    - service: adaptive_lighting.apply
      data:
        lights:
          - light.office
        adapt_brightness: true
        adapt_color: true
        turn_on_lights: true
        transition: 60
        entity_id: switch.adaptive_lighting_adapt_brightness_default
    - service: adaptive_lighting.apply
      data:
        lights:
          - light.office
        adapt_brightness: true
        adapt_color: true
        turn_on_lights: true
        transition: 60
        entity_id: switch.adaptive_lighting_default

# Turn Off Office Lights After No Activity for 3 Minutes
- alias: "Turn Office Lights Off After No Activity"
  initial_state: on
  trigger:
    platform: time_pattern
    minutes: "/3"
  condition:
    - condition: state
      entity_id: input_boolean.sean_office_presence
      state: "off"
    - condition: state
      entity_id: input_boolean.emily_office_presence
      state: "off"
    - condition: state
      entity_id: group.office_motion
      state: "off"
    - condition: state
      entity_id: input_boolean.office_occupied
      state: "off"
    - condition: template
      value_template: "{{ not is_state('sensor.steam_76561197976250572', 'online') }}"
    - condition: template
      value_template: "{{ not is_state('sensor.sean_room_location', 'office') }}"
    - condition: template
      value_template: "{{ not is_state('sensor.emily_room_location', 'office') }}"
  action:
    - service: light.turn_off
      data:
        entity_id: light.office
        transition: 2
    - delay: "00:00:01"
    - service: light.turn_off
      data:
        entity_id: light.office
        transition: 2

# Randomize Hue Scenes at Sunset
- alias: Randomize Office Hue Scenes
  initial_state: off
  trigger:
    platform: time_pattern
    minutes: '/5'
  condition:
    - condition: state
      entity_id: group.seanemily
      state: 'home'
    - condition: sun
      after: sunset
      before: sunrise
    - condition: state
      entity_id: input_boolean.bedtime_sean
      state: 'off'
    - condition: state
      entity_id: light.office
      state: 'on'
    - condition: time
      after: '19:00:00'
      before: '03:00:00'
  action:
    - variables:
        options: "{{ state_attr('input_select.hue_office', 'options') }}"
        random_index: "{{ range(options | length) | random }}"
    - service: input_select.select_option
      data:
        option: "{{ options[random_index] }}"
      target:
        entity_id: input_select.hue_office
    - service: scene.turn_on
      data:
        entity_id: "{{ options[random_index] }}"
    - service: automation.turn_off
      target:
        entity_id: automation.office_auto_brightness_transition