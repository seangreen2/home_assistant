- alias: "Office Lux Brightness (Daylight Only)"
  id: office_lux_brightness_daylight
  description: >
    Adjust light.office brightness based on ambient lux, with smooth transitions.
    Runs only during the day. Adaptive Lighting takes over after sunset.
  mode: restart
  trigger:
    - platform: state
      entity_id: sensor.office_motion_sensor_illuminance
      for:
        seconds: 30
    - platform: time_pattern
      minutes: "/5"
  condition:
    - condition: state
      entity_id: light.office
      state: "on"
    - condition: sun
      before: sunset
  action:
    - variables:
        lux: "{{ states('sensor.office_motion_sensor_illuminance') | float }}"
        current_brightness: "{{ (state_attr('light.office', 'brightness') | float(0)) / 2.55 }}"
        target_brightness: >
          {% if lux < 85 %}
            90
          {% elif lux < 135 %}
            75
          {% elif lux < 185 %}
            60
          {% elif lux < 230 %}
            45
          {% elif lux < 300 %}
            30
          {% else %}
            10
          {% endif %}
    - condition: template
      value_template: >
        {{ (current_brightness - target_brightness) | abs > 10 }}
    - service: adaptive_lighting.set_manual_control
      data:
        entity_id: switch.adaptive_lighting_office
        lights: ["light.office"]
    - service: light.turn_on
      target:
        entity_id: light.office
      data:
        brightness_pct: "{{ target_brightness }}"
        transition: 120


- alias: "Office Lights On by Motion"
  id: office_motion_light_on
  mode: single
  trigger:
    - platform: state
      entity_id: group.office_motion
      to: "on"
  condition:
    - condition: state
      entity_id: group.seanemily
      state: "home"
    - condition: state
      entity_id: light.office
      state: "off"
  action:
    - service: adaptive_lighting.apply
      data:
        lights:
          - light.office
        adapt_brightness: true
        adapt_color: true
        turn_on_lights: true
        transition: 1
        entity_id: switch.adaptive_lighting_office


- alias: "Office Mood Lighting After 9PM"
  id: office_mood_lighting_9pm
  trigger:
    - platform: state
      entity_id: group.office_motion
      to: "on"
    - platform: time
      at: "20:00:00"
  condition:
    - condition: state
      entity_id: group.seanemily
      state: "home"
    - condition: time
      after: "19:59:59"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: light.office
              state: "off"
          sequence:
            - service: adaptive_lighting.set_manual_control
              data:
                entity_id: switch.adaptive_lighting_office
                lights: ["light.office"]
            - service: automation.turn_off
              entity_id: automation.office_lights_on_by_motion
            - service: automation.turn_off
              entity_id: automation.office_lux_brightness_daylight_only
            - service: light.turn_on
              data:
                entity_id: light.standing_lamp_bulb
                brightness_pct: 1
                transition: 1
        - conditions:
            - condition: state
              entity_id: light.office
              state: "on"
          sequence:
            - service: adaptive_lighting.set_manual_control
              data:
                entity_id: switch.adaptive_lighting_office
                lights: ["light.office"]
            - service: automation.turn_off
              entity_id: automation.office_lights_on_by_motion
            - service: automation.turn_off
              entity_id: automation.office_lux_brightness_daylight_only
            - service: light.turn_on
              data:
                entity_id: light.standing_lamp_bulb
                brightness_pct: 1
                transition: 120
            - service: light.turn_off
              data:
                entity_id: light.desk_lamp_bulb
                transition: 15


# Turn Off Office Lights After No Activity for 3 Minutes
- alias: "Turn Office Lights Off After No Activity"
  initial_state: on
  trigger:
    - platform: time_pattern
      minutes: "/3"
    - platform: state
      entity_id: group.office_motion
      to: "off"
      for: 
        minutes: 5
  condition:
    - condition: state
      entity_id: group.office_motion
      state: "off"
    - condition: state
      entity_id: input_boolean.office_occupied
      state: "off"
    - condition: template
      value_template: "{{ not is_state('sensor.steam_76561197976250572', 'online') }}"
    - condition: template
      value_template: "{{ not is_state('sensor.sean_room_location', 'office') }}"
    - condition: template
      value_template: "{{ not is_state('sensor.emily_room_location', 'office') }}"
  action:
    - service: light.turn_off
      data:
        entity_id: light.office
        transition: 2
    - delay: "00:00:01"
    - service: light.turn_off
      data:
        entity_id: light.office
        transition: 2
    - service: switch.turn_off
      target:
        entity_id:
          - switch.led_lamp_left
          - switch.led_lamp_right

# turn on corner lamps after sunset
- alias: "Toggle LED Corner Lamps"
  trigger:
    - platform: state
      entity_id:
        - group.office_motion
        - input_boolean.office_occupied
      to: "on"
    - platform: sun
      event: sunset
  condition:
    - condition: sun
      after: sunset
    - condition: state
      entity_id: group.seanemily
      state: "home"
  action:
    - service: switch.turn_on
      target:
        entity_id:
          - switch.led_lamp_left
          - switch.led_lamp_right

# Randomize Hue Scenes at Sunset
- alias: Randomize Office Hue Scenes
  initial_state: off
  trigger:
    platform: time_pattern
    minutes: '/5'
  condition:
    - condition: state
      entity_id: group.seanemily
      state: 'home'
    - condition: sun
      after: sunset
      before: sunrise
    - condition: state
      entity_id: input_boolean.bedtime_sean
      state: 'off'
    - condition: state
      entity_id: light.office
      state: 'on'
    - condition: time
      after: '19:00:00'
      before: '03:00:00'
  action:
    - variables:
        options: "{{ state_attr('input_select.hue_office', 'options') }}"
        random_index: "{{ range(options | length) | random }}"
    - service: input_select.select_option
      data:
        option: "{{ options[random_index] }}"
      target:
        entity_id: input_select.hue_office
    - service: scene.turn_on
      data:
        entity_id: "{{ options[random_index] }}"
    - service: automation.turn_off
      target:
        entity_id: automation.office_auto_brightness_transition