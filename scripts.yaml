bedtime:
  sequence:
    - condition: and
      conditions:
        - condition: state
          entity_id: group.sean
          state: "home"
        - condition: time
          after: "20:00:00"
          before: "07:00:00"
        - condition: template
          value_template: "{{ not is_state('media_player.bedroom_tv', 'playing') }}" # NOT condition
        - condition: template
          value_template: "{{ not is_state('media_player.bedroom_tv', 'paused') }}" # NOT condition
        - condition: template
          value_template: "{{ not is_state('media_player.living_room_tv', 'playing') }}" # NOT condition
        - condition: template
          value_template: "{{ not is_state('media_player.plex_living_room_tv', 'paused') }}" # NOT  condition
        - condition: template
          value_template: "{{ not is_state('media_player.plex_living_room_tv', 'playing') }}" # NOT conditio
    - service: automation.turn_off
      entity_id: automation.bedroom_auto_brightness
#    - service: automation.turn_off
#      entity_id: automation.living_room_auto_brightness
    - service: automation.turn_off
      entity_id: automation.office_auto_brightness
    - service: media_player.volume_set
      data:
        entity_id: media_player.bedroom_speaker
        volume_level: .80
    - service: automation.turn_on
      entity_id: automation.repeat_rain_audio
    - service: light.turn_off
      data:
        entity_id: group.bedtime_lights
        transition: 2
    - service: input_select.select_option
      data:
        entity_id: input_select.sean_room_location
        option: Sleep
    - service: switch.turn_off
      entity_id: switch.air_freshener_switch
    - service: switch.turn_off
      entity_id: switch.office_fan
    - service: switch.turn_off
      entity_id: switch.living_room_fan
    - service: homeassistant.turn_on
      entity_id: switch.bedroom_fan
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.bedtime_sean

morning:
  sequence:
    - condition: and
      conditions:
        - condition: state
          entity_id: group.sean
          state: "home"
        - condition: time
          after: "05:00:00"
          before: "10:00:00"
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.bedtime_sean
    - service: input_select.select_option
      data:
        entity_id: input_select.sean_room_location
        option: Home
    - service: automation.turn_on
      entity_id: automation.living_room_auto_brightness
    - service: automation.turn_on
      entity_id: automation.office_auto_brightness
    - service: switch.turn_on
      entity_id: switch.bias_lights
    - condition: and
      conditions:
        - condition: state
          entity_id: group.sean
          state: "home"
        - condition: state
          entity_id: input_boolean.bedtime_emily
          state: "off"
    - service: automation.turn_off
      entity_id: automation.repeat_rain_audio
    - service: media_player.media_stop
      data:
        entity_id: media_player.bedroom_speaker
    - service: light.turn_on
      data_template:
        entity_id: light.bedroom
        brightness_pct: 100
        transition: 180
    - delay:
        seconds: 180
    - service: automation.turn_on
      entity_id: automation.bedroom_auto_brightness

bedtime_emily:
  sequence:
    - condition: and
      conditions:
        - condition: state
          entity_id: group.emily
          state: "home"
        - condition: time
          after: "20:00:00"
          before: "07:00:00"
        - condition: template
          value_template: "{{ not is_state('media_player.bedroom_tv', 'playing') }}" # NOT condition
        - condition: template
          value_template: "{{ not is_state('media_player.bedroom_tv', 'paused') }}" # NOT condition
    - service: automation.turn_off
      entity_id: automation.bedroom_auto_brightness
    - service: media_player.volume_set
      data:
        entity_id: media_player.bedroom_speaker
        volume_level: .80
    - service: automation.turn_on
      entity_id: automation.repeat_rain_audio
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.bedtime_emily
    - service: homeassistant.turn_on
      entity_id: switch.bedroom_fan
    - service: light.turn_off
      data:
        entity_id: light.bedroom
        transition: 2
    - service: input_select.select_option
      data:
        entity_id: input_select.emily_room_location
        option: Sleep
    - service: light.turn_off
      data:
        entity_id: light.bathroom
        transition: 2

morning_emily:
  sequence:
    - condition: and
      conditions:
        - condition: state
          entity_id: group.emily
          state: "home"
        - condition: time
          after: "04:00:00"
          before: "10:00:00"
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.bedtime_emily
    - service: automation.turn_on
      entity_id: automation.living_room_auto_brightness
    - service: automation.turn_on
      entity_id: automation.office_auto_brightness
    - service: input_select.select_option
      data:
        entity_id: input_select.emily_room_location
        option: Home
    - condition: and
      conditions:
        - condition: state
          entity_id: group.emily
          state: "home"
        - condition: state
          entity_id: input_boolean.bedtime_sean
          state: "off"
    - service: automation.turn_off
      entity_id: automation.repeat_rain_audio
    - service: media_player.media_stop
      data:
        entity_id: media_player.bedroom_speaker
    - service: light.turn_on
      data_template:
        entity_id: light.bedroom
        brightness_pct: 100
        transition: 180
    - delay:
        seconds: 180
    - service: automation.turn_on
      entity_id: automation.bedroom_auto_brightness


emily_naptime:
  sequence:
    - if:
        - condition: state
          entity_id: media_player.bedroom_speaker
          state: 'off'
        - condition: state
          entity_id: group.emily
          state: "home"
      then:
        - service: automation.turn_off
          entity_id: automation.bedroom_auto_brightness
        - service: media_player.volume_set
          data:
            entity_id: media_player.bedroom_speaker
            volume_level: .80
        - service: input_boolean.turn_on
          data:
            entity_id: input_boolean.bedtime_emily
        - service: automation.turn_on
          entity_id: automation.repeat_rain_audio
        - service: media_player.play_media
          data:
            entity_id: media_player.bedroom_speaker
            media_content_id: !secret rain_audio
            media_content_type: audio/mp3
        - service: homeassistant.turn_on
          entity_id: switch.bedroom_fan
        - service: light.turn_off
          data:
            entity_id: light.bedroom
            transition: 2
      else:
        - service: automation.turn_off
          entity_id: automation.repeat_rain_audio
        - service: media_player.media_stop
          data:
            entity_id: media_player.bedroom_speaker
        - service: input_boolean.turn_off
          data:
            entity_id: input_boolean.bedtime_emily
        - service: light.turn_on
          data_template:
            entity_id: light.bedroom
            brightness_pct: 100
            transition: 180
        - delay:
            seconds: 180
        - service: automation.turn_on
          entity_id: automation.bedroom_auto_brightness

bedtime_joyce:
  sequence:
    - condition: and
      conditions:
        - condition: state
          entity_id: group.joyce
          state: "home"
        - condition: time
          after: "20:00:00"
          before: "07:00:00"
    - service: automation.turn_off
      entity_id: automation.living_room_auto_brightness
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.bedtime_joyce

morning_joyce:
  sequence:
    - condition: and
      conditions:
        - condition: state
          entity_id: group.joyce
          state: "home"
        - condition: time
          after: "05:00:00"
          before: "10:00:00"
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.bedtime_joyce
    - service: automation.turn_on
      entity_id: automation.living_room_auto_brightness
    - service: automation.turn_on
      entity_id: automation.living_room_auto_brightness_transition


# office lights toggle button
office_lights_toggle:
  sequence:
    - if:
        - condition: state
          entity_id: light.silicon_labs_ezsp_office_lights_zha_group_0x0002
          state: 'on'
      then:
        service: light.turn_off
        data:
          entity_id: light.silicon_labs_ezsp_office_lights_zha_group_0x0002
      else:
        - service: adaptive_lighting.apply
          data:
            lights:
              - light.silicon_labs_ezsp_office_lights_zha_group_0x0002
            adapt_brightness: true
            adapt_color: true
            turn_on_lights: true
            entity_id: switch.adaptive_lighting_adapt_brightness_default

# bedroom lights toggle button
bedroom_lights_toggle:
  sequence:
    - if:
        - condition: state
          entity_id: light.bedroom
          state: 'on'
      then:
        service: light.turn_off
        data:
          entity_id: light.bedroom
      else:
        - service: adaptive_lighting.apply
          data:
            lights:
              - light.bedroom
            adapt_brightness: true
            adapt_color: true
            turn_on_lights: true
            entity_id: switch.adaptive_lighting_adapt_brightness_default

# downstairs lights toggle button
downstairs_lights_toggle:
  sequence:
    - if:
        - condition: state
          entity_id: light.living_room
          state: 'on'
      then:
        service: light.turn_off
        data:
          entity_id: light.living_room
      else:
        - service: adaptive_lighting.apply
          data:
            lights:
              - light.living_room
            adapt_brightness: true
            adapt_color: true
            turn_on_lights: true
            entity_id: switch.adaptive_lighting_adapt_brightness_default

# cabinet lights toggle button
cabinet_lights_toggle:
  sequence:
    - if:
        - condition: state
          entity_id: light.cabinet_lights
          attribute: brightness
          state: 3
      then:
        service: light.turn_on
        data_template:
          entity_id: light.cabinet_lights
          brightness_pct: 100
          kelvin: 5400
      else:
        service: light.turn_on
        data_template:
          entity_id: light.cabinet_lights
          brightness_pct: 1
          kelvin: 5400

# vac scripts
vac_clean_livingroom:
  sequence:
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_segment_clean
        params:
          - segments:
              - 18
            repeat: 3
    - delay: 01:07:00
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_start_collect_dust
    - delay: 00:00:20
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_stop_collect_dust


vac_clean_kitchen:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.rosie
    data:
      command: app_segment_clean
      params:
        - segments:
            - 20
          repeat: 2

vac_clean_foyer:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.rosie
    data:
      command: app_segment_clean
      params:
        - segments:
            - 17
          repeat: 2

vac_clean_dining_room:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.rosie
    data:
      command: app_segment_clean
      params:
        - segments:
            - 19
          repeat: 2

vac_clean_sunroom:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.rosie
    data:
      command: app_segment_clean
      params:
        - segments:
            - 16
          repeat: 2

vac_clean_multiroom:
  sequence:
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_segment_clean
        params:
          - segments:
              - 19
              - 20
              - 17
            repeat: 2
    - delay: 00:50:00
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_start_collect_dust
    - delay: 00:00:15
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_stop_collect_dust

vac_clean_mop:
  sequence:
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_segment_clean
        params:
          - segments:
              - 16
              - 19
              - 20
            repeat: 3

vac_test_bin:
  sequence:
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_start_collect_dust
    - delay: 00:00:15
    - service: vacuum.send_command
      target:
        entity_id: vacuum.rosie
      data:
        command: app_stop_collect_dust

vac_clean_office:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.jeeves
    data:
      command: app_segment_clean
      params:
        - segments:
            - 17
          repeat: 2

vac_clean_hallway:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.jeeves
    data:
      command: app_segment_clean
      params:
        - segments:
            - 18
          repeat: 2

vac_clean_bedroom:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.jeeves
    data:
      command: app_segment_clean
      params:
        - segments:
            - 16
          repeat: 2

vac_clean_upstairs:
  sequence:
    service: vacuum.send_command
    target:
      entity_id: vacuum.jeeves
    data:
      command: app_segment_clean
      params:
        - segments:
            - 17
            - 16
            - 18
          repeat: 1

# show HA on Nest Hub
cast_ha_nesthub:
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'DashCast' }}"
            - condition: template
              value_template: "{{ state_attr('media_player.nesthub', 'app_name') != 'Spotify' }}"
          sequence:
            - service: media_player.volume_set
              data:
                volume_level: 0.0
              target:
                entity_id: media_player.nesthub
            - service: dash_cast.load_url
              data:
                entity_id: media_player.nesthub
                url: http://192.168.1.185:8123/dashboard-hub/0?kiosk
                force: true
            - delay:
                seconds: 5
            - service: media_player.volume_set
              data:
                volume_level: 0.7
              target:
                  entity_id: media_player.nesthub
